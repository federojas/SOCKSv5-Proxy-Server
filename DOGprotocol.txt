                     SOCKSV5 Proxy Administration Protocol 

Status of this Memo

   This document specifies a protocol designed for the ITBA univeristy course
   "Protocolos de comunicacion". Authors and contributors: Federico Gustavo Rojas Pelliccia,
   Santiago Sandrini, Leonardo Agustin D'Agostino and Roberto Franco Rodriguez Tulasne.  

Acknowledgments

   This document describes a protocol that is designed to interact with a Socks5d
   server and obtain metrics from it. It is a session oriented protocol which works 
   over TCP. 

1.  Introduction

   This protocol is intended to provide tools for a client in order to obtain certain 
   information over a running Socks5d server. The client can make requests asking for 
   the historic amount of connections over the server, the quantity of concurrent connections
   in the server and the quantity of bytes transfered in the server, between other things. This protocol does not 
   assure that the metrics are non volatile, meaning that if the server reboots, the statistics 
   may be lost. 
   As this protocol is  session oriented, operations such as adding or deleting user,
   setting a password and ending a connection, are needed.

   Based on socks5d protocol and Username/Password Authentication for SOCKS V5 (rfc 1928 and 1929).

   The commands supported can be divided in 3 sub-sections:
      o  Get request
      o  Alterations request
      o  Ending connection
   
   The associated commands values for Get requests are the following:
      o  Get the list of users
      o  Get the historic amount of connections over the server
      o  Get the concurrent connections quantity
      o  Get the quantity of bytes transfered in the server
      o  Get the status of password spoofing over the server
      o  Get the status of authentication over the server

      o  Get access to the logs of the server //VUELA???? FIJARSE SECCIONES DE ESTO ABAJO

   
   The associated CMD values for Alterations request are the following:
      o  Add a user 
      o  Delete a user 
      o  Set a new password  /// VUELA ????????????
      o  Set a user admin privileges ///// VUELA ????????????
      o  Toggle password spoofing in the server
      o  Toggle authentication in the server
    
2. Data definitions

   Big endian order (network order) is to be used in multiple byte fields.
   Big endian: most-significant-octet-first encoding.

   All data packet field size unit is byte/s unless otherwise specified.

3.  Initial negotiation
    
   The client establishes a TCP connection with the server.
   
   Once the connection with the SOCKS V5 server has started, the client
   must send the log in data by producing an Username/Password request:

           +----+------+----------+------+----------+
           |VER | ULEN |  UNAME   | PLEN |  PASSWD  |
           +----+------+----------+------+----------+
           | 1  |  1   | 1 to 255 |  1   | 1 to 255 |
           +----+------+----------+------+----------+
           
   The VER field contains the current version of the subnegotiation,
   which is 0x00.

      o The ULEN field contains the length of the UNAME field that follows.
      o The UNAME field contains the username as known to the source operating system (in ASCII charset).
      o The PLEN field contains the length of the PASSWD field that follows.
      o The PASSWD field contains the password association with the given UNAME.

   The server verifies the supplied UNAME and PASSWD, and sends the
   following response:
   
                        +----+--------+
                        |VER | STATUS |
                        +----+--------+
                        | 1  |   1    |
                        +----+--------+

   o A STATUS field of 0x00 indicates connection succedeed.
   o A STATUS field of 0x01 indicates connection failed by incorrect user/password
   o A STATUS field of 0x02 indicates an invalid version
   o A STATUS field of 0x03 indicates a server error
  
   In case of failure, the server returns a 'failure' (any STATUS value different than 0x00)
   status, it MUST close the connection.
   
In case of succesfull connection (STATUS value 0x00), the session is established.

4.  General request structure

Once the client is authenticated (the session with the server is established).
All client request MUST contain the following base structure 
(then according to each request, responses may have additional fields): 

                  +------+-----+
                  | TYPE | CMD |
                  +------+-----+
                  |   1  |  1  |
                  +------+-----+

Where TYPE refers to the command type, which can be:
   0x00 for a Get request
   0x01 for a Alterations request
   0x02 for Ending connection

and CMD refers to the specific command for each TYPE.

The associated CMD values for Get requests are the following:
   o  0x00 to get the list of users
   o  0x01 to get the historic amount of connections over the server
   o  0x02 to get the concurrent connections quantity
   o  0x03 to get the quantity of bytes transfered
   o  0x04 to get the status of password spoofing over POP3 in the server
   o  0x05 to get the status of authentication in the server

The associated CMD values for Alterations request are the following:
   o  0x00 to Add a user 
   o  0x01 to Delete a user 
   o  0x02 to toggle password spoofing over POP3 in the server
   o  0x03 to toggle authentication in the server
   
In case of Ending a connection no CMD value is needed. TODO: AGREGAR COMANDOS DE CMD ACA SI HACEN FALTA

5.  General response structure

Every server response will contain a general base structure as follows 
(and then according to each request, responses may have additional fields):

TODO: TENDRIA SENTIDO SACAR EL STATUS FIELD Y Q CUANDO HAYA UN ERROR DEVUELVA UN TYPE INEXISTENTE? Y DE ESA FORMA AHORRARNOS EL BYTE DE STATUS (para mi que no)
                  +----------+
                  |  STATUS  |
                  +----------+
                  |    1     |
                  +----------+

STATUS refers to the request status, and its values can be:

   o 0x00 succedeed
   o 0x01 general server failure
   o 0x02 unsupported type
   o 0x03 unsupported command

   TODO:  o  X'09' to X'FF' unassigned --> hace falta aclarar algo con esto? 

6.  GET Commands

      6.1   List of users  

         Request:

            +------+-----+
            | TYPE | CMD |
            +------+-----+
            | 0x0  |0x00 |
            +------+-----+
            
            CMD value is 0x00. Command used to get a list of all users in the server.

         Response:

            TODO: PREGUNTAR ESTE
            The list of users command returns content within the following structure:

                     +----------+------------+
                     |  STATUS  |   USRS     |
                     +----------+------------+
                     |    1     |  Variable  |
                     +----------+------------+

            Where:TODO:ESCRIBIR BIEN 
               o  USRS refers to the user list itself in ASCII charset, where the first byte indicates the username length.


      6.2   Historic amount of connections

         Request:

            +------+-----+
            | TYPE | CMD |
            +------+-----+
            | 0x0  |0x01 |
            +------+-----+

            CMD value is 0x01. Command used to get the historic amount of connections over the server.

         Response:

            The historic amount of connections over the server command returns content within the following structure:

                     +----------+-------+
                     |  STATUS  |  QTY  |
                     +----------+-------+
                     |    1     |   8   |
                     +----------+-------+
            
            Where: 
            TODO: los 8  bytes son pensados en funcion de escalabilidad pero realmente a nosotros con 2 nos alcanza no?
               o  QTY specifies the amount of bytes transfered.

      6.3   Quantity of current  connections

         Request:

            +------+-----+
            | TYPE | CMD |
            +------+-----+
            | 0x0  |0x02 |
            +------+-----+
            
            CMD value is 0x02. Command used quantity of current connections.

         Response:

            The quantity of current connections command returns content within the following structure:

                     +----------+-------+
                     |  STATUS  |  QTY  |
                     +----------+-------+
                     |    1     |   2   |
                     +----------+-------+
            Where:
               o  QTY specifies the amount of users listed.

      6.4   Quantity of bytes transfered  

         Request:

            +------+-----+
            | TYPE | CMD |
            +------+-----+
            | 0x0  |0x03 |
            +------+-----+
            
            CMD value is 0x03. Command used to get the quantity of bytes transfered in the server.

         Response:

            The quantity of bytes transfered command returns content within the following structure:

                     +----------+-------+
                     |  STATUS  |  QTY  |
                     +----------+-------+
                     |    1     |   8   |
                     +----------+-------+

            Where:
               o  QTY specifies the amount of bytes transfered.

      6.5   Password spoofing status

         Request:

               +------+-----+
               | TYPE | CMD |
               +------+-----+
               | 0x0  |0x04 |
               +------+-----+
               
               CMD value is 0x04. Command used to check if password spoofing over POP3 is enabled.

         Response:

            The password spoofing status command returns content within the following structure:

            +----------+------------+
            |  STATUS  |  SPOOFING  |
            +----------+------------+
            |    1     |     1      |
            +----------+------------+

            Where SPOOFING refers to the state of password spoofing over POP3:
               o  0x00 means that spoofing is turned OFF.
               o  0x01 means that spoofing is turned ON.

      6.6   Authentication status   

         Request:

            +------+-----+
            | TYPE | CMD |
            +------+-----+
            | 0x0  |0x05 |
            +------+-----+
            
            CMD value is 0x05. Command used to check if authentication is enabled.

         Response:

            The authentication status command returns content within the following structure:

            +----------+------------+
            |  STATUS  |    AUTH    |
            +----------+------------+
            |    1     |     1      |
            +----------+------------+

            Where AUTH refers to the state of authentication in the server:
               o  0x00 means that authentication is turned OFF.
               o  0x01 means that authentication is turned ON.


7.  Alterations Commands

      7.1  Add a User

         Request:

            CMD value 0x00. Command used to add a user to the server,
            the following  structure is required:

                  +-------+-----+----------+------+----------+------+----------+
                  |  TYPE | CMD |   ROLE   | ULEN |  UNAME   | PLEN |  PASSWD  |
                  +-------+-----+----------+------+----------+------+----------+
                  | 0x01  | 0x0 |    1     |  1   | 1 to 255 |  1   | 1 to 255 |
                  +-------+-----+----------+------+----------+------+----------+     

            o  ROLE field refers to the role of the new user:
                  0x00 for normal users
                  0x01 for admin users
            o  ULEN specifies the length of the UNAME field that follows.
            o  UNAME contains the username (must be in ASCII charset).
            o  PLEN specifies the length of the PASSWD field that follows.
            o  PASSWD field contains the password association with the given UNAME (must be in ASCII charset).
            

         Response: standard response as specified in section 5

      7.2  Delete User

            Request:

               To delete a user, the following  structure is required:

                     +------+-----+------+----------+
                     | TYPE | CMD | ULEN |  UNAME   |
                     +------+-----+------+----------+
                     | 0x01 |0x01 |  1   | 1 to 255 |
                     +------+-----+------+----------+

               In which TYPE and CMD values are the specified in "General request structure" section and
               ULEN, UNAME,PLEN, PASSWD and ROLE are the same fields specified in 7.1. 
               It is important to specify that the UNAME value must exist in order to be deleted.
            
               o In case authentication is turned off the password field will not be evaluated.

            Response: standard response as specified in section 5

      7.3  Set new Password // VUELA ?????? NO ES NECESARIO PERO ESTA BUENA DIJO CODA

            Request:

               To set a  new password for a user, the following  structure is required:

                     +------+-----+------+----------+--------+-------------+
                     | TYPE | CMD | ULEN |  UNAME   |  PLEN  |   PASSWD    |
                     +------+-----+------+----------+--------+-------------+
                     | 0x01 |0x02 |  1   | 1 to 255 |    1   |   1 to 255  |
                     +------+-----+------+----------+--------+-------------+

               In which TYPE and  CMD values are the specified in "General request structure" section
               and ULEN and UNAME are the same fields specified in 7.1. 
               PLEN and PASSWD have the same structure type as PLEN and PASSWD specified in 7.1 but
               the fields contain the new password specifications.
               It is important to specify that the UNAME value must exist in order to set new password.
               
               o In case authentication is turned off the password field will not be evaluated.

            Response: standard response as specified in section 5

      7.4  Give a user admin priviledges // VUELA ??????? CODA DIJO QUE PARA CAMBIAR ROL NO ES NECESARIO, PODEMOS BORRAR Y VOLVER A AGREGAR USUARIO

            Request:
               //TODO: ESTO NO SE SI ESTA BIEN, CUALQUIER USUARIO PODRIA HACERSE ADMIN

               To set a  new password for a user, the following  structure is required:

                     +------+-----+------+----------+
                     | TYPE | CMD | ULEN |  UNAME   |
                     +------+-----+------+----------+
                     |0x01  |0x03 |  1   | 1 to 255 |
                     +------+-----+------+----------+

               In which the fields are the same specified in 7.1.

               // VUELA ????????
               It is relevant to state that this command can only be excecuted by users with admin role, meaning 
               that only an admin can make an existing user admin.
               In any other case, the request will not be evaluated, EXCEPT authentication is turned off. 
               This case is analogous to the case that an admin user is making the request.
               //

            Response: standard response as specified in section 5

      7.5 Toggle password spoofing

            Request:

               In order to toggle password spoofing in the server, the client MUST have admin priviledges.
               This request must contain the following structure:
               
                     +--------+-------+---------------+
                     |  TYPE  |  CMD  |   SPOOFING    |
                     +--------+-------+---------------+
                     |  0x01  | 0x04  |       1       |
                     +--------+-------+---------------+

               As it was previously specified, in this case TYPE must be 0x01 and CMD must be 0x04.
               SPOOFING field values:
                  0x00 to turn spoofing OFF
                  0x01 to turn spoofing ON 

            Response: standard response as specified in section 5
   
      7.6 Toggle authentication in the server

            Request: 
               
                     +--------+-------+------------+
                     |  TYPE  |  CMD  |    AUTH    |
                     +--------+-------+------------+
                     |  0x01  | 0x05  |     1      |
                     +--------+-------+------------+

               AUTH field values:
                  0x00 to turn authentication OFF
                  0x01 to turn authentication ON

            Response: standard response as specified in section 5
 


